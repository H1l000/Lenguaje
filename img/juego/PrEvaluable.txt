CREATE DATABASE PrEvalVentas;
GO
USE PrEvalVentas;

CREATE TABLE cliente (
id INT PRIMARY KEY,
nombre VARCHAR(100) NOT NULL,
apellido1 VARCHAR(100) NOT NULL,
apellido2 VARCHAR(100),
email varchar(100),
ciudad VARCHAR(100),
categoría INT
);

CREATE TABLE comercial (
id INT PRIMARY KEY,
nombre VARCHAR(100) NOT NULL,
apellido1 VARCHAR(100) NOT NULL,
apellido2 VARCHAR(100),
telefono NUMERIC(9,0),
comisión NUMERIC(10,2)
);

CREATE TABLE pedido (
id INT PRIMARY KEY,
total NUMERIC(10,2) NOT NULL,
fecha DATE,
id_cliente INT NOT NULL,
id_comercial INT NOT NULL,
CONSTRAINT fk_pedido_cliente FOREIGN KEY (id_cliente) REFERENCES cliente(id),
CONSTRAINT fk_comercial_cliente FOREIGN KEY (id_comercial) REFERENCES comercial(id)
);


INSERT INTO cliente VALUES(1, 'Aarón', 'Rivero', 'Gómez', 'aar@edu.com', 'Almería', 100);
INSERT INTO cliente VALUES(2, 'Adela', 'Salas', 'Díaz', 'as@edu.com', 'Granada', 200);
INSERT INTO cliente VALUES(3, 'Adolfo', 'Rubio', 'Flores', 'ar@edu.com', 'Sevilla', NULL);
INSERT INTO cliente VALUES(4, 'Adrián', 'Suárez', NULL, 'asu@edu.com', 'Jaén', 300);
INSERT INTO cliente VALUES(5, 'Marcos', 'Loyola', 'Méndez', 'mal@gamil.com', 'Almería', 200);
INSERT INTO cliente VALUES(6, 'María', 'Santana', 'Moreno', 'mas@gamil.com', 'Cádiz', 100);
INSERT INTO cliente VALUES(7, 'Pilar', 'Ruiz', NULL, 'pilr@outlook.com', 'Sevilla', 300);
INSERT INTO cliente VALUES(8, 'Pepe', 'Ruiz', 'Santana', 'peper@gmail.com', 'Huelva', 200);
INSERT INTO cliente VALUES(9, 'Guillermo', 'López', 'Gómez', 'guille@hotmail.com', 'Granada', 225);
INSERT INTO cliente VALUES(10, 'Daniel', 'Santana', 'Loyola', null, 'Sevilla', 125);
INSERT INTO comercial VALUES(1, 'Daniel', 'Sáez', 'Vega', 654321056, 0.15);
INSERT INTO comercial VALUES(2, 'Juan', 'Gómez', 'López', 654321058, 0.13);
INSERT INTO comercial VALUES(3, 'Diego','Flores', 'Salas', 654321060, 0.11);
INSERT INTO comercial VALUES(4, 'Marta','Herrera', 'Gil', 654321062, 0.14);
INSERT INTO comercial VALUES(5, 'Antonio','Carretero', 'Ortega', 654321064, 0.12);
INSERT INTO comercial VALUES(6, 'Manuel','Domínguez', 'Hernández', 654321066, 0.13);
INSERT INTO comercial VALUES(7, 'Antonio','Vega', 'Hernández', 654321068, 0.11);
INSERT INTO comercial VALUES(8, 'Alfredo','Ruiz', 'Flores', 654321070, 0.05);
INSERT INTO pedido VALUES(1, 150.5, '2017-10-05', 5, 2);
INSERT INTO pedido VALUES(2, 270.65, '2016-09-10', 1, 5);
INSERT INTO pedido VALUES(3, 65.26, '2017-10-05', 2, 1);
INSERT INTO pedido VALUES(4, 110.5, '2016-08-17', 8, 3);
INSERT INTO pedido VALUES(5, 948.5, '2017-09-10', 5, 2);
INSERT INTO pedido VALUES(6, 2400.6, '2016-07-27', 7, 1);
INSERT INTO pedido VALUES(7, 5760, '2015-09-10', 2, 1);
INSERT INTO pedido VALUES(8, 1983.43, '2017-10-10', 4, 6);
INSERT INTO pedido VALUES(9, 2480.4, '2016-10-10', 8, 3);
INSERT INTO pedido VALUES(10, 250.45, '2015-06-27', 8, 2);
INSERT INTO pedido VALUES(11, 75.29, '2016-08-17', 3, 7);
INSERT INTO pedido VALUES(12, 3045.6, '2017-04-25', 2, 1);
INSERT INTO pedido VALUES(13, 545.75, '2019-01-25', 6, 1);
INSERT INTO pedido VALUES(14, 145.82, '2017-02-02', 6, 1);
INSERT INTO pedido VALUES(15, 370.85, '2019-03-11', 1, 5);
INSERT INTO pedido VALUES(16, 2389.23, '2019-03-11', 1, 5);

--OPCION A

--1.Total ventas por año y mes de aquellos pedidos de más de 150€
SELECT YEAR(fecha), MONTH(fecha), SUM(total)
FROM pedido
WHERE total>150
GROUP BY YEAR(fecha), MONTH(fecha);

--2. Nombre del comercial y cantidad de pedidos realizados. Solo deben aparecer aquellos que han hecho más de dos pedidos.
SELECT co.nombre, COUNT(co.id) AS 'pedidos'
FROM comercial co INNER JOIN pedido p
ON co.id=p.id_comercial
GROuP BY co.nombre
HAVING COUNT(co.id)>2;

--3. Nombre del comercial y pedido de más importe realizado.
SELECT co.nombre, MAX(p.total)
FROM comercial co INNER JOIN pedido p
ON co.id=p.id_comercial
GROuP BY co.nombre;

--4. Devuelve un listado que muestre todos los pedidos que ha realizado cada cliente. 
--El resultado debe mostrar todos los datos de los pedidos y el nombre y email del cliente.
--El listado debe mostrar datos de los clientes ordenados alfabéticamente por el nombre.
SELECT p.*, c.nombre, c.email 
FROM pedido p INNER JOIN cliente c
ON p.id_cliente=c.id
ORDER BY c.nombre ASC;

--Si uso right join me mostrará todos incluso cuando no hayan hecho pedido... MAL
--Quiere todos los PEDIDOS de cada cliente
SELECT p.*, c.nombre, c.email 
FROM pedido p RIGHT JOIN cliente c
ON p.id_cliente=c.id
ORDER BY c.nombre ASC;

--5.Devuelve el nombre completo de los comerciales que han participado en algún pedido realizado por María Santana Moreno
SELECT CONCAT(co.nombre,' ', co.apellido1, ' ', co.apellido2) AS 'Comercial'
FROM pedido p
INNER JOIN comercial co
on p.id_comercial=co.id
INNER JOIN cliente c
ON p.id_cliente=c.id
WHERE c.nombre ='María' AND c.apellido1='Santana' AND c.apellido2='Moreno'

--6.Nombre completo de los comerciales que han realizado más de 2 pedidos.
SELECT CONCAT(co.nombre, ' ', co.apellido1, ' ', co.apellido2) AS 'Comercial', COUNT(p.id_comercial)--COUNT(*) vale tambien
FROM pedido p INNER JOIN comercial co
ON p.id_comercial=co.id
GROUP BY CONCAT(co.nombre, ' ', co.apellido1, ' ', co.apellido2)
HAVING COuNT(p.id_comercial)>2;

--7. Devuelve el nombre completo del comercial y del cliente que han realizado algún pedido en 2017.
SELECT CONCAT(co.nombre, ' ', co.apellido1, ' ', co.apellido2) AS 'Comercial', CONCAT(c.nombre, ' ', c.apellido1, ' ', c.apellido2) AS 'Cliente'
FROM pedido p INNER JOIN comercial co
ON p.id_comercial=co.id
INNER JOIN cliente c
ON p.id_cliente=c.id
WHERE YEAR(fecha)=2017

--8. Devuelve un listado que muestre todos los pedidos en los que ha participado un comercial.
--El resultado debe mostrar todos los datos de los pedidos y de los comerciales. 
--El listado debe mostrar los datos de los comerciales alfabéticamente.
SELECT p.*, co.*
FROM pedido p
INNER JOIN comercial co
ON p.id_comercial=co.id
ORDER BY co.nombre ASC;



--9.Nombre completo de los comerciales que han participado en algún pedido realizado por María Santana Moreno.


--10. Número de clientes por categoría.
SELECT categoría, COUNT(*) AS 'Nº'
FROM cliente
GROUP BY categoría;

--11. Devuelve un listado con el identificador, nombre y los apellidos de todos los clientes que han realizado algún pedido.
--El listado debe estar ordenado alfabéticamente y se deben eliminar los elementos repetidos.
SELECT DISTINCT (c.id), c.nombre, c.apellido1, c.apellido2
FROM pedido p
INNER JOIN cliente c
on c.id=p.id_cliente
INNER JOIN comercial co
ON co.id=p.id_comercial
WHERE p.id_cliente IS NOT NULL
ORDER BY c.nombre ASC;


--12. Devuelve un listado de todos los clientes y el total de pedido de aquellos clientes que realizaron un pedido
--durante 2017, cuya cantidad esté entre 300 y 1000€
SELECT c.nombre, SUM(total)
FROM pedido p
INNER JOIN cliente c
ON p.id_cliente=c.id
WHERE YEAR(p.fecha)=2017 AND p.total>=300 AND p.total<=1000
GROUP BY c.nombre


--13. Devuelve el pedido de más importe que ha realizado el comercial que se llame Daniel.
SELECT TOP 1 co.nombre, p.total
FROM pedido p
INNER JOIN comercial co
ON co.id=p.id_comercial
WHERE co.nombre='DANIEL'
ORDER BY p.total DESC;

SELECT co.nombre, MAX(p.total)AS 'MAX'
FROM pedido p
INNER JOIN comercial co
ON p.id_comercial=co.id
WHERE co.nombre='DANIEL'
GROUP BY co.nombre


--14. Devuelve el nombre completo del comercial y del cliente que han realizado algún pedido en 2017.


--15. Devuelve el id y el mes del pedido de los pedidos realizados por los comerciales cuyo nombre empieza por A.
SELECT co.id, co.nombre, MONTH(p.fecha) AS 'Mes'
FROM pedido p
INNER JOIN comercial co
ON p.id_comercial=co.id
WHERE co.nombre LIKE 'A%'

--16. Nombre de los comerciales cuyo pedido lo ha realizado un cliente con un nombre de más de 7 letras. Sin utilizar join.
SELECT co.nombre
FROM comercial co
WHERE pedido

SELECT c.nombre
FROM cliente c
WHERE LEN(c.nombre)>7


--OPCIÓN B:

--1. Nombre completo de los comerciales que han realizado mmás de 2 pedidos.


--2. Total de pedidos realizados por clientes de Sevilla o de Almería.


--3. Número de clientes por categoría.

--4. Nombre completo del comercial y del cliente que han realizado algún pedido en 2017.


--5. Devuelve el nombre de todos los comerciales, incluyendo los que no han hecho pedidos.


--6. Nombre del comercial y cantidad de pedidos realizados. Solo deben aparecer aquellos que han hecho más de dos pedidos.

--7. Devuelve el nombre completo del comercial y del cliente que han realizado algún pedido en 2017.


--8. Devuelve un listado con el identificador, nombre, y los apellidos de todos los clientes....